name: Go Fuzz

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

concurrency:
  group: go_fuzz
  cancel-in-progress: true

env:
  GOCACHE: /tmp/go/gocache
  GOBIN: ${{ github.workspace }}/bin

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.3
          check-latest: true
          cache-dependency-path: go.sum
          cache: true
          go-version-file: go.mod

      - name: Cache Go
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.GOCACHE }}
            ${{ env.GOBIN }}
          key: ${{ runner.os }}-go-${{ hashFiles('*.go') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('*.go') }}

      - name: Build
        timeout-minutes: 2
        run: |
          go build -v
          go env -w GOBIN=${{ env.GOBIN }}
          echo "PATH=\${{ env.GOBIN }}:\$PATH" >> $GITHUB_PATH

      - name: Install Test Deps
        run: |
          go install github.com/mfridman/tparse@latest
          go install gotest.tools/gotestsum@latest
          tparse

      - name: Cache tparse
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/bin
          key: ${{ runner.os }}-tparse-${{ hashFiles('bin/tparse') }}

      - name: Create tparse artifact
        uses: actions/upload-artifact@v2
        with:
          name: tparse
          path: ${{ github.workspace }}/bin/tparse

  fuzz-multiwrite:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download tparse artifact
        uses: actions/download-artifact@v2
        with:
          name: tparse

      - name: Fuzz MultiWrite Short
        run: |
          ${{ github.workspace }}/bin/tparse -follow -all -sort=elapsed

      - name: Fuzz MultiWrite
        run: |
          ${{ github.workspace }}/bin/
