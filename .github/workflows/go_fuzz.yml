# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Fuzz

on:
  push:
    branches:
      - 'main'

  pull_request:
    branches:
      - 'main'

  #  schedule:
  #    - cron: '0 * */1 * *'

  workflow_dispatch:

concurrency:
  group: go_fuzz
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GOCACHE: /tmp/go/gocache

    steps:
    - uses: actions/checkout@v3

    - name: Cache Go tests
      uses: actions/cache@v2
      with:
        path: |
          $(go env GOCACHE)
        key: ${{ runner.os }}-go-${{ hashFiles('*.go') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ hashFiles('(*.go') }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.20.3
        check-latest: true
        cache-dependency-path: go.sum
        cache: true
        go-version-file: go.mod

    - name: Build
      timeout-minutes: 3m
      run: go build -v

  fuzz-multiwrite:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Fuzz MultiWrite Short
        run: go test -fuzz=FuzzMultiWrite -fuzztime=5m -timeout=15m -cover -short

      - name: Fuzz MultiWrite
        run: go test -fuzz=FuzzMultiWrite -fuzztime=5m -timeout=15m -cover

  fuzz:
    needs: [ build ] #will fail if more than 1 fuzz function is ..
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Fuzz Short
        run: go test -fuzz=Fuzz -short -v -fuzztime=5m -timeout=15m -cover  -run="Fuzz*"


  race-fuzz:
    runs-on: ubuntu-latest
    needs: [ fuzz ]
    steps:
      - uses: actions/checkout@v3

      - name: Race Short Fuzz
        continue-on-error: true
        run: go test -fuzz=Fuzz -short -race -v -fuzztime=5m -timeout=15m -cover  -run="Fuzz*"

      - name: Fuzz normalize
        if: ${{ failure() }}
        uses: nick-fields/retry@v2
        with:
          max_attempts: 10
          retry_on: error
          timeout_minutes: 360m
          #working-directory: ${{ github.workspace }}
          command: |
            echo "go fuzz intensive failed"

#  fuzz-intensive:
#    runs-on: ubuntu-latest
#    needs: [ fuzz ]
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Fuzz
#        run: go test -fuzz=Fuzz -v -fuzztime=10m -timeout=15m -cover
#        continue-on-error: true
#
#      - name: Fuzz normalize
#        if: ${{ failure() }}
#        uses: nick-fields/retry@v2
#        with:
#          max_attempts: 10
#          retry_on: error
#          timeout_minutes: 360m
#          #working-directory: ${{ github.workspace }}
#          command: |
#            echo "go fuzz intensive failed"









