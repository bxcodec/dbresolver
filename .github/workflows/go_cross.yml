name: Cross Compatibility Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref}}
  cancel-in-progress: true

jobs:

  build:
    strategy:
      matrix:
        go-version: [ '1.18.x', '1.19.x', '1.20.x' , '1.21.x']
        arch: [ x64, arm, arm64 ]
        os: [ windows-latest, macos-latest, ubuntu-latest ]

        include:
          - os: ubuntu-latest
            gocache: /tmp/go/gocache
#          - os: windows-latest
#            gocache: C:/gocache
          - os: macos-latest
            gocache: /tmp/go/gocache

      fail-fast: true
      max-parallel: 5

    runs-on: ${{ matrix.os }}

    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
          cache: 'go'
          go-cache: ${{ matrix.gocache }}
          go-version-file: go.mod
          check-latest: true

      - name: Cache Go tests
        uses: actions/cache@v2
        with:
          path: |
            $(go env GOCACHE)
          key: ${{ runner.os }}-${{ matrix.arch }}-go-${{ hashFiles('**/go.mod','*_test.go') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-go-${{ hashFiles('**/go.mod','*.go') }}

      - name: Linter
        continue-on-error: true
        run: make lint-prepare && make lint

      - name: Test
        run: make test
